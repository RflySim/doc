=================================
高级功能
=================================

RflySim平台只开放了一些基本功能，本平台还支持一些高级功能（目前不免费公开），如多机仿真、UE4 高逼真场景和其他机型仿真（固定翼、小车等）等。若想获取高级功能可以联系 Email: buaarfly@163.com。

仿真平台
----------------------------
利用Simulink的图像化设计界面，我们可以非常容易地进行飞控的分层设计，这样结构清晰、便于维护。飞控的整体结构总体上可以分为上层，包括状态机和自主飞行；下层包括位置控制、姿态控制和状态估计。

图 3    

同时，为了更加专注于我们感兴趣的部分的设计，我们并不需要每个部件都自己来设计，另一方面PX4的很多功能已经成功测试并应用，我们完全可以利用这个开源系统已有的功能。例如，我们仅设计控制器和状态机，而将状态估计部分交由PX4软件中已有的滤波器。

图 4  

我们充分利用PX4软件的功能，在自己搭建的Simulink模型中增加了下面的功能，这样可以极大地提高飞控的开发效率。
* 在线参数整定. 使用者可以通过QGC地面站在线修改Simulink模型中的参数，无需每次修改参数后就重新编译并烧录程序，提高程序调试效率。
* 数据记录. 为便于后续的实验分析，我们可以方便地将感兴趣的过程数据记录到SD卡中，记录数据的个数以及数据记录的频率都可以灵活调整。
* 数据实时显示.  如果使用者需要在飞行器飞行过程中实时观察飞行器状态或者控制器的中间参数，也可以很方便地在Simulink模型中添加实时数据观测模块，并在QGC中观测数据，甚至还能在QGC中将感兴趣的部分数据记录下来。
很多高级控制器对执行周期的要求很高，不同的执行周期对应的控制器参数可能差异很大。飞控底层控制逻辑一般采用分层控制，即位置控制输出期望的姿态给姿态控制器，最后姿态控制器的输出给执行机构。PX4中传感器的数据更新频率是250Hz,所以我们将姿态控制器的频率设置为250Hz。位置控制器的控制频率一般低于姿态控制器的频率，而且姿态控制器的带宽应是位置控制器的4~10倍，所以这里将位置控制器的执行频率设置为50Hz.上层应用的执行频率一般不用很高，这里取状态机的执行频率为5Hz,自主飞行的执行频率为50Hz。状态估计部分，直接使用PX4中已有的部分。这里进一步体现了我们模型的优越性，我们不用完全从零开始搭建自己的飞控系统，而是更加专注于自己感兴趣的部分，如控制、状态估计或者状态机设计。
我们通过数据记录功能，测试得到各个模块的执行周期。

图 5

可见系统各个模块的执行频率被控制得非常准确。状态机的指定执行周期是0.2s，实际执行周期s，统计频率为5Hz；姿态控制的指定执行周期是0.004s，实际执行周期是s，统计频率为249Hz；位置控制和自主飞行的指定执行周期是0.02s，实际执行周期是s, 计频率为49Hz。
另外考虑到Pixhawk的硬件资源限制，我们所设计的控制器或者是状态估计器不应该过于复杂，基于在线优化的方法，如MPC，粒子滤波器，难以在有限的计算资源下实时运行。

图 6

我们所设计的姿态控制+位置控制程序内存的使用很低，是PX4中姿态控制+位置控制程序内存占用的一半；CPU占用率略高于PX4中的姿态控制+位置控制程序，但是PX4的CPU资源还有30.95%的时间处于空闲状态。

CopterSim
-------------------------------------

RflySim高级版安装方法
*************************************

注册方法如下：
（1） 从 https://rflysim.com 可以获取到RflySim高级版的安装包和序列号，在MATLAB中运行“OnekeyScript”指令，会弹出序列号激活窗口。

图 A.1   CopterSim 注册界面

（2）输入序列号后，点击“确认”按钮，在弹出页面中配置好安装选项，即可一键完成所有高级功能的自动安装。
CopterSim 注册完成界面如下，主要分为五大部分。图 (a) 是多旋翼模型与飞行环境界面，主要用于选择动力系统组件组成不同类型的多旋翼，用于后续仿真。图 (b) 是模型参数计算与数据库管理界面，主要用于计算所组装多旋翼的模型参数，并将结果存入数据库方便后续使用，这里也提供了方便的数据库管理功能。图 (c) 是高级功能区，包括集群多机仿真、UE4 场景选择等功能，将在后文详细介绍。图 (d) 主要用于连接 Pixhawk 自驾仪，并控制仿真的开始与停止。图 (e) 用于实时显示 Pixhawk自驾仪返回提示消息，并显示仿真模型的位置、姿态等信息。

图 A.2   CopterSim 注册完成界面

自定义多旋翼仿真模型
*************************************
在模型配置界面，可以输入的数据包括整机质量、机架轴距和飞行海拔等飞行器基本信息，以及用于组件多旋翼的动力系统组件或参数，例如电机、螺旋桨、电调和电池等。CopterSim 提供两种选择动力系统组件的方法，第一种是直接从动力系统品牌型号数据库中，选择市面上常见的动力系统组件产品来组装多旋翼。
由于动力系统的品牌型号产品数据库难以把世界上的产品全都包含进去，对于更高自由度设置多旋翼的需求，CopterSim 也提供了自定义动力系统组件参数功能。

图 A.3   自定义模型参数输入界面

单击第一行最后的“自定义”选项，即可进入组件自定义参数界面。在该界面中，读者可以自定义地输入电机(KV 值、空载电压、内阻）、电调、电池和螺旋桨的详细参数信息。理论上通过“自定义”设计功能，可以模拟任意动力系统组件，甚至是市面上不存在的产品。
在配置完一个多旋翼后，单击“计算”按钮程序就会自动分析读者选择的配置的合理性。不合理的多旋翼配置会导致仿真失败，例如，出现拉力不足无法起飞、电池电压超限烧坏电调和电机，或者螺旋桨尺寸超过机身可容纳尺寸等错误。CopterSim 在检测输入的多旋翼配置后，如果配置不合理就会给出错误提示，用户需要重新选择合理配置。

图 A.4   模型配置合理性检测提示界面

对于初学者或者对多旋翼设计不够了解的读者来说，配置一架可以正常飞行的多旋翼都较为困难。因此 CopterSim 还提供了通过模型数据库直接选择飞机配置的功能。

图 A.5   机型数据库直接选取飞机模型

在“机型数据库”的下拉列表中，读者可以选择预先配置好的多旋翼配置（或者在此基础上修改配置参数）来快速得到可用的多旋翼模型。

设定仿真时飞机初始状态
**************************************

CopterSim 提供了多旋翼初始状态设置功能。

图 A.6   设置仿真初始位置

可以在初试位置设置栏输入多旋翼的 x 和 y 坐标（单位：m）和偏航角 yaw 的值（单位：度），其中 x和y 的方向分别指向多旋翼的前和右，机头向右转则偏航角为正。

其他类型多旋翼的硬件在环仿真
****************************************

之前的实验需要通过QGC 地面站设置Pixhawk 自驾仪进入“HIL Quadcopter X"机架模式，这个模式只支持四旋翼 X 字型的硬件在环仿真，因此在实用性方面具有一定的局限性。实际上，CopterSim 不仅支持四旋翼的硬件在环仿真，还可以用于所有 PX4 自驾仪支持的多旋翼类型。具体步骤如下：
（1）在 QGC 地面站中选择多旋翼机架
1）确保 QGC 地面站正确连接 Pixhawk 自驾仪；
2）在 QGC 地面站的“Airframe"标签页选择需要的多旋翼机架(如六旋翼、八旋翼、共轴双桨等)；

图 A.12   QGC 中选择需要的多旋翼机架

3）在该机架的下拉列表中选择对应的机架尺寸(如 F450、3DR DIY Quad 等)，并应用该机架；
4）Pixhawk 自驾仪重启之后，确认已经处于选定的机架模式下。
通过上述步骤就可以设置一个可用于实际飞行的机架类型，而且配置了针对该机架尺寸的配套控制器参数。
（2）在 QGC 地面站中选择进入硬件在环仿真模式
QGC 地面站正确连接Pixhawk 自驾仪后，在 QGC 地面站的“Safety"标签页中，将“HITL Enabled"选项设置为“Enabled"，然后重新插拔 Pixhawk 自驾仪。经过上面的步骤，可以将任意的机架设置进入硬件在环仿真模式。

图 A.13    将“HITL Enabled"选项设置为“Enabled"

（3）CopterSim 中选择对应的多旋翼机架
在 CopterSim 中有两种方式可以设置多旋翼的机架类型。第一种是在主界面的“机架类型”下拉菜单中选择；另一种是打开“模型参数”对话框，直接在其中设置机臂数、旋翼数和机头朝向。

图 A.14   CopterSim 中设置多旋翼机架

（4）开始硬件在环仿真
以六旋翼为例，通过 QGC 地面站将 Pixhawk 自驾仪的机架类型设置为六旋翼，并在 QGC 地面站中开启硬件在环模式，再在CopterSim 中配置一个六旋翼参数。然后，将 Pixhawk 自驾仪插入计算机，在 CopterSim中选中 Pixhawk 自驾仪的串口，并单击“开始仿真”，即可开始六旋翼的硬件在环仿真。

其他机型的硬件在环仿真
*************************************

Pixhawk/PX4 自驾仪除了支持多旋翼，还支持固定翼、垂直起降飞行器、小车、船等机型。为了保证对上述 PX4 官方支持的机型的硬件在环仿真，甚至使读者能自行设置机架类型，CopterSim 还提供了通过 Simulink 生成DLL 模型文件，并进行硬件在环仿真的功能。
（1）CopterSim 中使用 DLL 模型文件
将 Simulink 生成的DLL 模型文件复制到文件夹“CopterSim\external\model”中。重新打开 CopterSim 之后，就可以在 “使用 DLL 模型文件”下拉菜单中看到可用的 DLL 模型文件。这些 DLL 模型文件可以仿真任意飞行器或车辆。选中一个 DLL 模型，用 QGC 地面站配置 Pixhawk/PX4 自驾仪之后，就可以在 CopterSim中对特定的机型进行硬件在环的仿真。也可以在UE4 编辑器中加入对应的机体三维模型，形成完整的硬件在环仿真闭环。

图 A.15   选择 DLL 模型进行仿真

（2）Simulink 中生成DLL 模型文件的方法
打开 Simulink 生成DLL 模型文件例程文件夹（和安装包一起获取)，打开需要的 Simulink 模型（多旋翼、固定翼、小车等)的.slx 文件。然后在 Simulink 中修改模型参数或者替换部分模块使之满足仿真需求，再单击 Simulink 的“编译”按钮生成 C/C++ 代码。最后，在 MATLAB 中运行“GenerateModelDLLFile”命令，即可生成.dll 格式的DLL 模型文件，然后将该 DLL 文件复制到“CopterSim\external\model”文件夹中即可。

图 A.16   Simulink 生成 DLL 模型文件例程

由于 Simulink 采用模块化编程方法，在提供的.slx 文件中，可以非常轻松地通过更改参数或部分模块获取不同的飞行器布局。例如，将“Init.m”模型参数初始化脚本中的机架类型参数ModelParam uavType 修改为特定值，可以很方便地得到多旋翼机型。之前的实验课程默认使用多旋翼布局对应 uavType=3，也就是常规的 X 字型四旋翼飞行器。
这些配置与PX4 自驾仪支持的多旋翼机型一一对应，可以参考官网：http://dev.px4.io/master/en/airframes/airframe reference.html。

图 A.17   Simulink 模型中 uavType 参数对应的机型

场景
--------------------------------------

基于 UE4 的三维视景介绍
*************************************

CopterSim 提供了选择三维显示场景的功能。3DDisplay默认的场景是基于 Ogre 引擎开发的小巧三维场景，对计算机配置要求低，但是加载速度慢且不够逼真。

图 A.7   选择三维场景按钮

单击“三维显示场景"的下拉框可以看到所有的三维场景，其中“MountainTerrain"和“NeighborhoodPark"两个场景是基于 UE4 开发的更逼真的三维场景。在 CopterSim 中选择相应的场景后，再打开对应三维场景程序，即可实现不同三维场景的切换。

图 A.8   基于 UE4 的三维仿真场景

基于 UE4 开发三维场景
*************************************

通过UE4 接口插件，读者可以在 UE4 中快速搭建飞行场景。具体方法如下：
（1）新建 UE4 场景。自定义 UE4 三维场景项目文件夹，读者自行购买或者开发一个基于UE4(引擎版本大于等于 4.22，编译器 Visual Studio 2017 以上)场景工程。这里不介绍详细的流程，请自行查看官方教程（http://api.unrealengine.com/CHN/）。

图 A.9   自定义 UE4 三维场景项目文件夹

（2）获取接口插件。解压“Rfly3DSimPlugin.zip"插件文件(和安装包)，将其复制到 “Plugins"文件夹(如果没有该文件夹，则手动创建)中。
（3）生成“.exe"可执行程序。打开 UE4 编辑器，在 UE4 编辑器主界面可以查看自动加载的 “Rfly3DSimPlugin"插件内容。在 UE4 编辑器中简单地设置初始场景，编译代码后，就可以将其打包为“.exe"格式的 Windows 系统可执行程序。

图 A.10   UE4 编辑器

（4）导出地图地形数据。在 UE4 中选中地形文件，并导出为“.png"格式的地形文件，同时选择三个关键位置点的坐标存储到“.txt"文件中。将得到的“.png"和“.txt"文件复制到 “CopterSim\external\map”目录下。重启 CopterSim 后，就可以在场景下拉菜单中选择三维场景。

图 A.11   将地形网格数据导入 CopterSim

集群
----------------------------

多机集群仿真
*******************************
CopterSim 还支持多机集群仿真功能。只需开启多个 CopterSim，并设置好每个飞机的 ID 值即可。在硬件在环仿真模式下，每个 CopterSim 需要连接一个 Pixhawk 自驾仪，然后分别单击“开始仿真”按钮，即可分别开始仿真。三维视景显示软件（只支持 UE4 开发的视景）会自动从局域网中接收所有的飞机数据，并集中显示在同一个场景中。因此，目前这种分布式仿真构架理论上支持任意多个飞机的硬件在环仿真。限制因素主要在以下几个方面：计算机 USB 接口数量（每个 Pixhawk 自驾仪会占用一个 USB 接口）、计算机内存大小（每个 CopterSim 会占用一定的内存空间）、计算机处理器速度（性能需要保证每个 CopterSim 都能实时运算）。

图 A.18   CopterSim 多机集群仿真

目前，CopterSim 支持两种方式多开运行。
（1）手动打开方式，每次双击 CopterSim.exe 可以打开一个仿真程序(飞机 ID 会自动累加，不需要手动设置)，重复 N 次可以打开 N 个仿真程序，依次连接串口，并单击开始仿真。
（2）通过 bat 脚本，一次打开任意多个 CopterSim 并完成软件配置、串口选择与自动运行。用文本编辑器打开“CopterSim\AutoStartScriptTemp.bat"脚本，可以看到如下内容：
start CopterSim.exe 1 1 20100 0 0 1 0 235 0 0 4
start CopterSim.exe 1 2 20102 0 0 1 0 235 0.5 0 5
start CopterSim.exe 1 3 20104 0 0 1 0 235.5 0 0 6
start CopterSim.exe 1 4 20106 0 0 1 0 235.5 1 0 7
上述代码展示了一次打开四个CopterSim 的 Windows 批处理 bat 脚本。和下图 一一对应，CopterSim.exe 后面跟的第 0 位数字表示“是否自动开始仿真"；第 1 到 9 位对应了所示 CopterSim 主界面的高级功能的每个选项值；第 10 位对应了 Pixhawk 自驾仪的 USB 串口号。

图 A.19   CopterSim 多开脚本序号对应关系

仿真模式设置
***********************************

除了硬件在环仿真，CopterSim 还支持其他的仿真模式，来提高测试效率，主要支持的仿真模式有以下几种。
（1）不同自驾仪系统的软硬件在环仿真。本平台不仅可以用于PX4自驾仪的仿真，也可扩展到其他自驾仪系统（例如Ardupilot），只需在这一栏选择对应的自驾仪和仿真模式即可。
（2）连同 Simulink 进行软件在环仿真。由于 Simulink 中每增加一个多旋翼需要复制一份多旋翼的副本，导致多机仿真的时候运行速度非常慢，不便于实时观察仿真效果。因此，可以通过代码生成的方式，将模型生成 DLL 模型文件放在 CopterSim 中运行，然后 Simulink 通过 UDP 收端口从 CopterSim 中获取传感器数据并发送控制指令，从而形成闭环。在多机集群仿真时， UDP 收端口号需要保证不同的 CopterSim 各不相同，然后 Simulink 通过设定的端口号与 CopterSim 通信。需要注意的是，在DLL 模型文件生成例程中，还提供了生成模型和控制器的完整飞行器模型，可以实现直接发送速度指令，进行顶层决策系统的软件在环仿真。

图 A.20   CopterSim 仿真模式的设置

（3）连接 PX4 自驾仪进行软件在环仿真。PX4 自驾仪的SITL模式还支持编译成可以在计算机中虚拟运行的模式，在一台计算机中运行 N 个 PX4 自驾仪软件，同时打开 N 个 CopterSim，设置好两两之间的端口连接，即可在同一台计算机上进行多机集群的软件在环仿真。

多计算机分布式仿真
******************************************

单台计算机的计算能力与内存空间等都是有限的，无法支持任意多机的集群仿真。因此，CopterSim 还提供了多台计算机实现局域网分布式仿真的功能。

图 A.21   CopterSim 局域网分布式仿真构架

勾选 CopterSim 主界面的“联机”按钮，即可开启局域网广播功能，每个 CopterSim 的飞行状态会被局域网内所有计算机接收到。因此，只要在局域网内安置足够多的计算机，每台计算机上运行一定量的硬件在环仿真或软件在环仿真程序，本平台可以实现任意多机的集群分布式仿真。同时，每台计算机上支持开启多个三维视景程序，从多个视角观察所有飞机的飞行效果。注意，如果不勾选“联机”按钮，CopterSim 的飞行信息只能被本台计算机接收到，这样不会干扰其他计算机的仿真效果，适用于实验课程使用。

多机集群的 Simulink 控制
************************************************

对于多机集群仿真而言，通信和实时控制是一件困难的事情。针对上述需求，我们在本平台的高级功能基础上，开发了一系列的课程和例程。

图 A.22   Simulink 多机集群控制源码

主要实现的功能有以下 4 个。
（1）初步软件在环仿真。我们提供了 Simulink 的 UDP 接口来直接向 UE4 三维视景软件发送多个多旋翼的显示信息。通过提供的接口，一方面在单个多旋翼进行软/硬件在环仿真时，可以生成运动或静止的障碍物。另一方面，它提供预览多机飞行效果的机会，从而制定出最合理的运动轨迹。

图 A.23   Simulink 异构无人系统视景

（2）集群控制算法的软件在环仿真。在 Simulink 中通过UDP 协议，向带有控制闭环 (由 Simulink 与模型一起生成，或者与 PX4 SITL控制模式相连接)的 CopterSim 多旋翼模型，发送顶层的速度或者位置等控制信息，同时接收运动状态信息，进行多机集群的软件在 环仿真。
（3）集群控制算法的硬件在环仿真。在 Simulink 中通过 UDP 协议，向所有 Copter- Sim+Pixhawk 的硬件仿真闭环系统，发送速度或位置等顶层控制的 Mavlink 消息，形成多机集群的硬件在环仿真。我们提供的源码中有在 Simulink 中实现打包和解包 Mavlink 协议的函数，然后 CopterSim 有自动转发Pixhawk 自驾仪的Mavlink 消息包的功能。因此，用户可以控制每个 Pixhawk+CopterSim 的硬件在环系统去完成任意任务。
（4）通过 Simulink 实时控制真实多旋翼集群。在 Simulink 中通过数据传输模块接收和发送 N  个串口的 Mavlink 消息，实现多个真实多旋翼系统的实时控制。这里 Simulink相当于一个地面控制站的功能，用于控制真实集群飞行系统。相对于用 C/C++ 开发集群控制平台，Simulink 能够更直观地观察集群的效果，且能够实时调整控制器参数。而且，Simulink 也支持生成C/C++ 代码程序，来提高运算速度。
通过上述的软件模拟 → 软件在环仿真→ 硬件在环仿真→ 实际集群系统控制，开发者可以循序渐进地实现集群控制算法的开发、仿真与真机实验，大大提高了开发效率。

基于视觉的控制接口
---------------------------
基于 UE4 的三维视景平台还支持视角切换功能，可以获取方便地获取到多个视角的图像数据。还支持通过共享内存或窗口图像抓取的方式在 Simulink、Python、C/C++ 等代码平台中实时获取到图像数据并进行处理，处理得到的视觉数据可以通过UDP 再返回给 CopterSim 或者 Simulink 控制，形成带有视觉的硬件在环仿真闭环。

图 A.24   多视角图像获取

图 A.24   多视角图像获取（续）

===========================================
Course 
===========================================

Book
--------------------------------

多旋翼飞行器设计与控制实验是北航可靠飞行控制研究组2020年发布的最新实验教材《全权, 戴训华, 王帅著. 多旋翼飞行器设计与控制实践[M]. 北京:电子工业出版社. 2020》的配套实验.
本书作为2017年出版的多旋翼理论教材《全权著. 多旋翼飞行器设计与控制[M]. 杜光勋, 赵峙尧, 戴训华, 等译. 北京: 电子工业出版社, 2017》的姐妹篇，侧重将理论知识通过Simulink与基于模型的设计方法快速在真机上实现.
          
课程内容
---------------------------------------

本课程包含十二讲，前四讲主要介绍软硬件实验平台基本使用方法，后八讲包含了八个实验。这八个实验可以分为四个板块，即设计和建模实验版块、估计实验版块、控制实验版块以及决策实验版块。

在从本网页的下载页面 获取到安装文件后, 下面四讲内容将介绍如何安装并应用本课程的软件包:
第01讲: 课程介绍. [pdf]
第02讲: 实验平台配置. [pdf]
第03讲: 实验平台使用. [pdf]  [Code]
第04讲: 实验流程. [pdf]
接下来的八讲对应了本课程的八个实验，我们提供了详细的例程和源码，保证每个实验或者每个版块的实验可以单独完成.
第05讲: 实验一：动力系统设计. [pdf]  [Code]
第06讲: 实验二：动态建模. [pdf]  [Code]
第07讲: 实验三：传感器标定. [pdf]  [Code]
第08讲: 实验四：滤波器设计. [pdf]  [Code]
第09讲: 实验五：姿态控制器设计. [pdf]  [Code]
第10讲: 实验六：定点位置控制器设计. [pdf]  [Code]
第11讲: 实验七：半自主控制模式设计. [pdf]  [Code]
第12讲: 实验八：失效保护逻辑设计. [pdf]  [Code]
最新的源码与课件也可以在我们的Github页面下载: https://github.com/RflySim/RflyExpCode

线上线下课程（中文版）
------------------------------------

为了让更多同学能够接触到实验课程，我们开设了线上（网络）实验课程。考虑到“硬件在环仿真”和“实际飞行实验”需要教具、 系统部署和助教当面解疑等诸多不便，目前不便于推广，故我们仅将仿真视频公开。对于实验方面，仅需要Matlab和Simulink即可。线上（网络）实验学习链接：
http://www.shenlanxueyuan.com/course/155
为了满足一部分同学开发需求，我们也开设了线下实验课程。在课程上，可以学习基于模型设计整套流程：设计-仿真-代码自动生成-硬件在环验证。通过学习，可以避免接触底层驱动，降低开发难度以及缩短开发周期，并且代码移植性好，使得会Matlab就能开发飞控。 线下实验课程会根据我们新的进展不断进行更新，具体请联系： 
  https://www.chinarobot.com/drone-MBD-course， 电话：14706265391，报名微信：jiushihanhan

============================================
应用案例
============================================
基于自抗扰控制（ADRC）算法的姿态控制
ADRC首先由韩京清先生提出，该控制器由跟踪微分器、非线性状态反馈和扩张状态观测器组成，其结构如下

这里对姿态控制使用ADRC，由第六章的动态系统建模可知，姿态动力学模型是一个二阶系统，所以可以使用二阶形式的ADRC方法。总体过程如视频所示

=========================================
下载和支持
=========================================

下载
----------------------------------------

常见问题
----------------------------------------

如果你有任何问题都可以在Github中提交: https://github.com/XunhuaDai/RflyExpCode/issues
下面是目前搜集到的一些常见问题，希望对您有所帮助。

支持
-----------------------------------------
如果您有任何问题请联系我们 Email: buaarfly@163.com.