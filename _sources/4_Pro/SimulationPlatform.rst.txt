===============================
仿真平台
===============================

利用Simulink的图像化设计界面，我们可以非常容易地进行飞控的分层设计，这样结构清晰、便于维护。飞控的整体结构总体上可以分为上层，包括状态机和自主飞行；下层包括位置控制、姿态控制和状态估计。

.. figure:: /images/Fig3.jpg
    :align: center
    
    图 1.1    

同时，为了更加专注于我们感兴趣的部分的设计，我们并不需要每个部件都自己来设计，另一方面PX4的很多功能已经成功测试并应用，我们完全可以利用这个开源系统已有的功能。例如，我们仅设计控制器和状态机，而将状态估计部分交由PX4软件中已有的滤波器。

.. figure:: /images/Fig4.jpg
    :align: center
    
    图 1.2  

我们充分利用PX4软件的功能，在自己搭建的Simulink模型中增加了下面的功能，这样可以极大地提高飞控的开发效率。

* 在线参数整定. 使用者可以通过QGC地面站在线修改Simulink模型中的参数，无需每次修改参数后就重新编译并烧录程序，提高程序调试效率。
* 数据记录. 为便于后续的实验分析，我们可以方便地将感兴趣的过程数据记录到SD卡中，记录数据的个数以及数据记录的频率都可以灵活调整。
* 数据实时显示.  如果使用者需要在飞行器飞行过程中实时观察飞行器状态或者控制器的中间参数，也可以很方便地在Simulink模型中添加实时数据观测模块，并在QGC中观测数据，甚至还能在QGC中将感兴趣的部分数据记录下来。

很多高级控制器对执行周期的要求很高，不同的执行周期对应的控制器参数可能差异很大。飞控底层控制逻辑一般采用分层控制，即位置控制输出期望的姿态给姿态控制器，最后姿态控制器的输出给执行机构。PX4中传感器的数据更新频率是250Hz,所以我们将姿态控制器的频率设置为250Hz。位置控制器的控制频率一般低于姿态控制器的频率，而且姿态控制器的带宽应是位置控制器的4~10倍，所以这里将位置控制器的执行频率设置为50Hz.上层应用的执行频率一般不用很高，这里取状态机的执行频率为5Hz,自主飞行的执行频率为50Hz。状态估计部分，直接使用PX4中已有的部分。这里进一步体现了我们模型的优越性，我们不用完全从零开始搭建自己的飞控系统，而是更加专注于自己感兴趣的部分，如控制、状态估计或者状态机设计。
我们通过数据记录功能，测试得到各个模块的执行周期。

.. figure:: /images/Fig5.jpg
    :align: center
    
    图 1.3

可见系统各个模块的执行频率被控制得非常准确。状态机的指定执行周期是0.2s，实际执行周期s，统计频率为5Hz；姿态控制的指定执行周期是0.004s，实际执行周期是s，统计频率为249Hz；位置控制和自主飞行的指定执行周期是0.02s，实际执行周期是s, 计频率为49Hz。
另外考虑到Pixhawk的硬件资源限制，我们所设计的控制器或者是状态估计器不应该过于复杂，基于在线优化的方法，如MPC，粒子滤波器，难以在有限的计算资源下实时运行。

.. figure:: /images/Fig6.jpg
    :align: center
    
    图 1.4

我们所设计的姿态控制+位置控制程序内存的使用很低，是PX4中姿态控制+位置控制程序内存占用的一半；CPU占用率略高于PX4中的姿态控制+位置控制程序，但是PX4的CPU资源还有30.95%的时间处于空闲状态。
